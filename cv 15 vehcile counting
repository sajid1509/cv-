import cv2
import numpy as np                                #15 Count Vehicles
net=cv2.dnn.readNet("C:\\Users\\s\\Downloads\\yolov3.weights","C:\\Users\\s\\Downloads\\dark
net-master\\darknet-master\\cfg\\yolov3.cfg")
layer_names = net.getLayerNames()
output_layers = [layer_names[i - 1] for i in net.getUnconnectedOutLayers()]
image = cv2.imread("C:\\Users\\s\\Downloads\\highway-traffic.webp")
height, width, channels = image.shape
blob = cv2.dnn.blobFromImage(image, 0.00392, (416, 416), (0, 0, 0), True, crop=False)
net.setInput(blob)
outs = net.forward(output_layers)
class_ids = []
confidences = []
boxes = []
for out in outs:
 for detection in out:
  scores = detection[5:]
 class_id = np.argmax(scores)
 confidence = scores[class_id]
 if confidence > 0.5: # Adjust the confidence threshold as needed
 center_x = int(detection[0] * width)
 center_y = int(detection[1] * height)
 w = int(detection[2] * width)
 h = int(detection[3] * height)
 x = int(center_x - w / 2)
 y = int(center_y - h / 2)
 boxes.append([x, y, w, h])
 confidences.append(float(confidence))
 class_ids.append(class_id)
indexes = cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)
vehicle_count = 0
for i in range(len(boxes)):
 if i in indexes:
 x, y, w, h = boxes[i]
 label = str(class_id)
 confidence = confidences[i]
 color = (0, 255, 0) # Green color for bounding box
 cv2.rectangle(image, (x, y), (x + w, y + h), color, 2)
 vehicle_count += 1
cv2.putText(image, f"Vehicles: {vehicle_count}", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1,
(0, 0, 255), 2)
cv2.imshow("Image", image)
cv2.waitKey(0)
cv2.destroyAllWindows()
