import cv2
import numpy as np
from google.colab.patches import cv2_imshow
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_fullbody.xml')
def calculate_distance(point1, point2):
    return np.linalg.norm(np.array(point1) - np.array(point2))
def check_social_distance(faces, frame):
    for (x1, y1, w1, h1) in faces:
        for (x2, y2, w2, h2) in faces:
            if (x1, y1, w1, h1) != (x2, y2, w2, h2):
                center1 = (x1 + w1 // 2, y1 + h1 // 2)
                center2 = (x2 + w2 // 2, y2 + h2 // 2)
                distance = calculate_distance(center1, center2)
                if distance < 100:
                    cv2.line(frame, center1, center2, (0, 0, 255), 2)
                    cv2.putText(frame, 'Too Close!', (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)
video_path = 'peoplebg.mp4'
cap = cv2.VideoCapture(video_path)
while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))
    check_social_distance(faces, frame)
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2)
    cv2_imshow(frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
cap.release()
cv2.destroyAllWindows()
